
services:
  # Raw Database Container
  postgres-dwh:
    image: postgres:13
    container_name: elt_dwh
    environment:
      POSTGRES_DB: elt_dwh
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
    volumes:
      - dwh_data_vol:/var/lib/postgresql/data
      - ./sql/dwh_schema:/docker-entrypoint-initdb.d/
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow -d elt_dwh"]
      interval: 10s
      timeout: 5s
      retries: 5

  # AIRFLOW METADATA DATABASE
  postgres-airflow:
    image: postgres:13
    container_name: airflow_metadata_db
    environment:
      POSTGRES_DB: airflow
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
    volumes:
      - airflow_db_vol:/var/lib/postgresql/data
    ports:
      - "5436:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow -d airflow"]
      interval: 10s
      timeout: 5s
      retries: 5

  # AIRFLOW INITIALIZATION (runs once)
  airflow-init:
    image: apache/airflow:2.5.0
    container_name: airflow_init
    environment:
      _AIRFLOW_DB_UPGRADE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: admin
      _AIRFLOW_WWW_USER_PASSWORD: admin
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql://airflow:airflow@postgres-airflow:5432/airflow
      AIRFLOW__CORE__EXECUTOR: SequentialExecutor
      AIRFLOW__WEBSERVER__SECRET_KEY: 'mysecretkey123'
    depends_on:
      postgres-airflow:
        condition: service_healthy
    command: bash -c "airflow db init && airflow users create --username admin --firstname Admin --lastname User --role Admin --email admin@example.com --password admin"

  # AIRFLOW WEBSERVER
  airflow-webserver:
    image: apache/airflow:2.5.0
    container_name: airflow_webserver
    environment:
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql://airflow:airflow@postgres-airflow:5432/airflow
      AIRFLOW__CORE__EXECUTOR: SequentialExecutor
      AIRFLOW__WEBSERVER__SECRET_KEY: 'mysecretkey123'
    volumes:
      - ./dags:/opt/airflow/dags
      - ./config:/opt/airflow/config
      - ./data:/opt/airflow/data
    ports:
      - "8081:8080"
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    command: webserver

  # AIRFLOW SCHEDULER
  airflow-scheduler:
    image: apache/airflow:2.5.0
    container_name: airflow_scheduler
    environment:
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql://airflow:airflow@postgres-airflow:5432/airflow
      AIRFLOW__CORE__EXECUTOR: SequentialExecutor
      AIRFLOW__WEBSERVER__SECRET_KEY: 'mysecretkey123'
    volumes:
      - ./dags:/opt/airflow/dags
      - ./config:/opt/airflow/config
      - ./data:/opt/airflow/data
      - /var/run/docker.sock:/var/run/docker.sock #mounts to Docker daemon's Unix socket
    depends_on:                                   #to be used by docker operator that spin up a container for dbt
      airflow-init:
        condition: service_completed_successfully
    command: scheduler
   
  #pgadmin is used to connect to the db's and view tables and data to view,exposed on port 8082 local host
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8082:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  dwh_data_vol:
  airflow_db_vol:
  pgadmin_data: